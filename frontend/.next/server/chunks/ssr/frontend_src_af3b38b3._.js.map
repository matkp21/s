{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/s/frontend/src/ai/schemas/symptom-analyzer-schemas.ts"],"sourcesContent":["\n/**\n * @fileOverview Defines Zod schemas for symptom analysis input and output.\n * These schemas are used by both the symptom analyzer flow and its corresponding tool.\n */\nimport { z } from 'zod';\n\nconst NextStepSchema = z.object({\n  title: z.string().describe(\"The title of the suggested next step.\"),\n  description: z.string().describe(\"A brief description of what this step entails.\"),\n  toolId: z.string().describe(\"The unique ID of the tool to be used for this step (e.g., 'mcq', 'flashcards').\"),\n  prefilledTopic: z.string().describe(\"The topic to pre-fill in the suggested tool.\"),\n  cta: z.string().describe(\"The call-to-action text for the button (e.g., 'Generate MCQs').\"),\n});\n\nexport const PatientContextSchema = z.object({\n  age: z.number().int().positive().optional().describe('Patient age in years.'),\n  sex: z.enum(['male', 'female', 'other']).optional().describe('Patient biological sex.'),\n  history: z.string().optional().describe('Brief relevant medical history or context.'),\n}).optional();\n\nexport const SymptomAnalyzerInputSchema = z.object({\n  symptoms: z.string().min(10, { message: \"Symptoms description must be at least 10 characters.\" }).describe('The symptoms the user is experiencing.'),\n  patientContext: PatientContextSchema,\n});\n\nexport const InvestigationSchema = z.object({\n  name: z.string().describe('Name of the suggested investigation (e.g., \"Chest X-ray\", \"CBC\").'),\n  rationale: z.string().optional().describe('Brief reason why this investigation is suggested.'),\n});\nexport type InvestigationItem = z.infer<typeof InvestigationSchema>;\n\n\nexport const DiagnosisItemSchema = z.object({\n  name: z.string().describe('The name of the potential diagnosis.'),\n  confidence: z.enum(['High', 'Medium', 'Low', 'Possible']).optional().describe('The AI s confidence level for this diagnosis.'),\n  rationale: z.string().optional().describe('A brief rationale for considering this diagnosis, including any red flags if applicable.'),\n});\nexport type DiagnosisItem = z.infer<typeof DiagnosisItemSchema>;\n\nexport const SymptomAnalyzerOutputSchema = z.object({\n  diagnoses: z.array(DiagnosisItemSchema).describe('A list of potential differential diagnoses, each with a name, optional confidence, and optional rationale.'),\n  suggestedInvestigations: z.array(InvestigationSchema).optional().describe('A list of suggested investigations for the top likely diagnoses, each with a name and optional rationale.'),\n  suggestedManagement: z.array(z.string()).optional().describe('A list of suggested initial management steps or considerations.'),\n  nextSteps: z.array(NextStepSchema).optional().describe('A list of suggested next steps for the user, such as using a study tool.'),\n  disclaimer: z.string().optional().describe('A standard disclaimer advising consultation with a medical professional.'),\n});\n"],"names":[],"mappings":"AACA;;;CAGC;;;;;;;AACD;AAAA;;AAEA,MAAM,iBAAiB,kOAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9B,OAAO,kOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC3B,aAAa,kOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,QAAQ,kOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC5B,gBAAgB,kOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACpC,KAAK,kOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC3B;AAEO,MAAM,uBAAuB,kOAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3C,KAAK,kOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC;IACrD,KAAK,kOAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;QAAU;KAAQ,EAAE,QAAQ,GAAG,QAAQ,CAAC;IAC7D,SAAS,kOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AAC1C,GAAG,QAAQ;AAEJ,MAAM,6BAA6B,kOAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjD,UAAU,kOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI;QAAE,SAAS;IAAuD,GAAG,QAAQ,CAAC;IAC3G,gBAAgB;AAClB;AAEO,MAAM,sBAAsB,kOAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1C,MAAM,kOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1B,WAAW,kOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AAC5C;AAIO,MAAM,sBAAsB,kOAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1C,MAAM,kOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1B,YAAY,kOAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;QAAU;QAAO;KAAW,EAAE,QAAQ,GAAG,QAAQ,CAAC;IAC9E,WAAW,kOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AAC5C;AAGO,MAAM,8BAA8B,kOAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClD,WAAW,kOAAA,CAAA,IAAC,CAAC,KAAK,CAAC,qBAAqB,QAAQ,CAAC;IACjD,yBAAyB,kOAAA,CAAA,IAAC,CAAC,KAAK,CAAC,qBAAqB,QAAQ,GAAG,QAAQ,CAAC;IAC1E,qBAAqB,kOAAA,CAAA,IAAC,CAAC,KAAK,CAAC,kOAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,GAAG,QAAQ,CAAC;IAC7D,WAAW,kOAAA,CAAA,IAAC,CAAC,KAAK,CAAC,gBAAgB,QAAQ,GAAG,QAAQ,CAAC;IACvD,YAAY,kOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AAC7C","debugId":null}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/s/frontend/src/components/symptom-analyzer/symptom-form.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Button } from '@/components/ui/button';\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport type { SymptomAnalyzerInput } from '@/ai/agents/SymptomAnalyzerAgent';\nimport { useToast } from '@/hooks/use-toast';\nimport { Send } from 'lucide-react';\nimport { Input } from '@/components/ui/input';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { SymptomAnalyzerInputSchema } from '@/ai/schemas/symptom-analyzer-schemas';\nimport type { z } from 'zod';\n\ntype SymptomFormValues = z.infer<typeof SymptomAnalyzerInputSchema>;\n\ninterface SymptomFormProps {\n  onAnalysisStart: (rawInput: SymptomAnalyzerInput) => void;\n  setIsLoading: (loading: boolean) => void;\n  isLoading: boolean;\n}\n\nexport function SymptomForm({ onAnalysisStart, setIsLoading, isLoading }: SymptomFormProps) {\n  const { toast } = useToast();\n  const form = useForm<SymptomFormValues>({\n    resolver: zodResolver(SymptomAnalyzerInputSchema),\n    defaultValues: {\n      symptoms: \"\",\n      patientContext: {\n        age: undefined,\n        sex: undefined,\n        history: \"\",\n      }\n    },\n  });\n\n  const onSubmit: SubmitHandler<SymptomFormValues> = async (data) => {\n    const analysisInput: SymptomAnalyzerInput = {\n      symptoms: data.symptoms,\n      patientContext: {\n        age: data.patientContext?.age || undefined,\n        sex: data.patientContext?.sex || undefined,\n        history: data.patientContext?.history || undefined,\n      }\n    };\n    onAnalysisStart(analysisInput);\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n        <FormField\n          control={form.control}\n          name=\"symptoms\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel htmlFor=\"symptoms-input\" className=\"text-foreground/90\">Symptoms Description</FormLabel>\n              <FormControl>\n                <Textarea\n                  id=\"symptoms-input\"\n                  placeholder=\"e.g., persistent cough, fever for 3 days, headache...\"\n                  className=\"min-h-[150px] resize-y rounded-lg border-border/70 focus:border-primary\"\n                  aria-describedby=\"symptoms-description\"\n                  {...field}\n                />\n              </FormControl>\n              <FormDescription id=\"symptoms-description\">\n                Provide as much detail as possible for a more relevant analysis.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n           <FormField\n              control={form.control}\n              name=\"patientContext.age\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Age (Optional)</FormLabel>\n                  <FormControl>\n                    <Input type=\"number\" placeholder=\"e.g., 45\" {...field} onChange={e => field.onChange(e.target.value === '' ? undefined : +e.target.value)} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n             <FormField\n              control={form.control}\n              name=\"patientContext.sex\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Biological Sex (Optional)</FormLabel>\n                  <Select onValueChange={field.onChange} value={field.value}>\n                    <FormControl>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select sex\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      <SelectItem value=\"male\">Male</SelectItem>\n                      <SelectItem value=\"female\">Female</SelectItem>\n                      <SelectItem value=\"other\">Other</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n        </div>\n         <FormField\n              control={form.control}\n              name=\"patientContext.history\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Brief History (Optional)</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"e.g., Smoker, Hypertensive\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n        <Button type=\"submit\" className=\"w-full rounded-lg py-3 text-base group\" disabled={isLoading} aria-label=\"Submit symptoms for analysis\">\n          Analyze\n          <Send className=\"ml-2 h-4 w-4 transition-transform duration-300 group-hover:translate-x-1\" />\n        </Button>\n      </form>\n    </Form>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 416, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/s/frontend/src/components/homepage/symptom-analysis-mode.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState } from 'react';\nimport { SymptomForm } from '@/components/symptom-analyzer/symptom-form';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { Loader2, ListChecks, Sparkles, Brain } from 'lucide-react';\nimport type { SymptomAnalyzerOutput, DiagnosisItem } from '@/ai/agents/SymptomAnalyzerAgent';\nimport { useProMode } from '@/contexts/pro-mode-context';\nimport { cn } from '@/lib/utils';\n// Note: SymptomAnalyzerInput is now primarily used within SymptomForm for the API call\n\nfunction getConfidenceColor(confidence?: DiagnosisItem['confidence']): string {\n  switch (confidence) {\n    case 'High': return 'text-green-600 dark:text-green-400';\n    case 'Medium': return 'text-yellow-600 dark:text-yellow-400';\n    case 'Low': return 'text-orange-600 dark:text-orange-400';\n    default: return 'text-muted-foreground';\n  }\n}\n\nexport function SymptomAnalysisMode() {\n  const [analysisResult, setAnalysisResult] = useState<SymptomAnalyzerOutput | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const { isProMode } = useProMode();\n\n  const handleAnalysisComplete = (result: SymptomAnalyzerOutput | null, err?: string) => {\n    setAnalysisResult(result);\n    setError(err || null);\n    setIsLoading(false);\n  };\n\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 md:gap-8 fade-in\">\n      <Card className=\"shadow-lg border-border/50 rounded-xl\">\n        <CardHeader>\n          <CardTitle className=\"text-2xl\">Enter Symptoms</CardTitle>\n          <CardDescription>\n            Describe the symptoms. Our AI backend will provide potential insights. Not for self-diagnosis.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <SymptomForm onAnalysisComplete={handleAnalysisComplete} setIsLoading={setIsLoading} isLoading={isLoading}/>\n        </CardContent>\n      </Card>\n\n      <Card className=\"shadow-lg border-border/50 rounded-xl\">\n        <CardHeader>\n          <CardTitle className=\"text-2xl\">Analysis Results</CardTitle>\n          <CardDescription>\n            Potential diagnoses based on symptoms. Always consult a medical professional.\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"min-h-[250px] flex flex-col justify-center\">\n          {isLoading && (\n            <div className=\"flex flex-col items-center justify-center text-muted-foreground\">\n              <Loader2 className=\"h-10 w-10 animate-spin text-primary mb-3\" />\n              <p className=\"text-sm\">Analyzing symptoms via backend...</p>\n            </div>\n          )}\n          {error && !isLoading && (\n            <Alert variant=\"destructive\" className=\"rounded-lg\">\n              <AlertTitle>Analysis Error</AlertTitle>\n              <AlertDescription>{error}</AlertDescription>\n            </Alert>\n          )}\n          {analysisResult && !isLoading && !error && (\n            <div className=\"space-y-4 fade-in\">\n              <div>\n                <h3 className=\"font-semibold text-lg text-foreground flex items-center mb-2\">\n                  <ListChecks className=\"mr-2 h-5 w-5 text-primary\" />\n                  Potential Considerations:\n                </h3>\n                {analysisResult.diagnoses.length > 0 ? (\n                  <ul className=\"space-y-2\">\n                    {analysisResult.diagnoses.map((diag, index) => (\n                      <li key={index} className=\"p-3 bg-muted/40 rounded-lg border border-border/30\">\n                        <div className=\"flex justify-between items-start\">\n                          <span className=\"font-medium text-sm text-foreground\">{diag.name}</span>\n                          {diag.confidence && (\n                            <span className={cn(\"text-xs font-semibold px-1.5 py-0.5 rounded-full\", getConfidenceColor(diag.confidence))}>\n                              {diag.confidence}\n                            </span>\n                          )}\n                        </div>\n                        {diag.rationale && <p className=\"text-xs text-muted-foreground mt-1 italic\">{diag.rationale}</p>}\n                      </li>\n                    ))}\n                  </ul>\n                ) : (\n                  <p className=\"text-muted-foreground text-sm\">No specific considerations could be determined based on the input.</p>\n                )}\n              </div>\n              {isProMode && (\n                <Alert variant=\"default\" className=\"mt-4 border-primary/50 bg-primary/10 rounded-lg\">\n                  <Sparkles className=\"h-5 w-5 text-primary\" />\n                  <AlertTitle className=\"text-primary font-semibold\">Pro Mode Active</AlertTitle>\n                  <AlertDescription className=\"text-primary/80 text-xs\">\n                    Advanced clinical annotations, detailed JSON data, and further analytical tools would be available for clinicians.\n                  </AlertDescription>\n                </Alert>\n              )}\n            </div>\n          )}\n          {!isLoading && !analysisResult && !error && (\n            <div className=\"flex flex-col items-center justify-center text-muted-foreground\">\n                <Brain className=\"h-12 w-12 mb-3 text-muted-foreground/50\" />\n                <p>Results will appear here once symptoms are submitted.</p>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 770, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/s/frontend/src/components/homepage/educational-support-mode.tsx"],"sourcesContent":["import React from 'react';\n\nconst EducationalSupportMode: React.FC = () => {\n  return (\n    <div className=\"educational-support-mode bg-blue-100 p-4 rounded-md\">\n      <h2 className=\"text-xl font-bold\">Educational Support Mode</h2>\n      <p>Welcome to the Educational Support Mode. Here you can find resources to enhance your learning experience.</p>\n    </div>\n  );\n};\n\nexport default EducationalSupportMode;\n"],"names":[],"mappings":";;;;;AAEA,MAAM,yBAAmC;IACvC,qBACE,qZAAC;QAAI,WAAU;;0BACb,qZAAC;gBAAG,WAAU;0BAAoB;;;;;;0BAClC,qZAAC;0BAAE;;;;;;;;;;;;AAGT;uCAEe","debugId":null}},
    {"offset": {"line": 806, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/s/frontend/src/components/pro/personalized-clinical-dashboard.tsx"],"sourcesContent":["\n// src/components/pro/personalized-clinical-dashboard.tsx\n\"use client\";\n\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Button } from \"@/components/ui/button\";\nimport { CheckSquare, MessageCircle, Bell, CalendarDays, Settings, PlusCircle, Edit2, GripVertical, Star, Loader2, ServerCrash } from \"lucide-react\";\nimport React, { useState, useEffect } from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { motion, Reorder } from \"framer-motion\";\nimport { useToast } from \"@/hooks/use-toast\";\n\n\ninterface TaskItem {\n  id: string;\n  text: string;\n  category: 'Lab Review' | 'Follow-up' | 'Patient Alert' | 'Schedule';\n  dueDate?: string;\n  priority?: 'High' | 'Medium' | 'Low';\n  completed: boolean;\n}\n\ninterface RecentActivityItem {\n    id: string;\n    text: string;\n    timestamp: string;\n}\n\ninterface DashboardData {\n    tasks: TaskItem[];\n    recentActivity: RecentActivityItem[];\n}\n\n\ninterface DashboardWidget {\n  id: string;\n  title: string;\n  icon: React.ElementType;\n  content: React.ReactNode;\n  defaultPosition: number;\n  isFrequentlyUsed?: boolean; \n  colSpan?: string;\n}\n\n\nexport function PersonalizedClinicalDashboard() {\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [dashboardData, setDashboardData] = useState<DashboardData | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const { toast } = useToast();\n\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n        setIsLoading(true);\n        setError(null);\n        try {\n            const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/api/pro/dashboard`);\n            if (!response.ok) {\n                throw new Error('Failed to fetch dashboard data from the backend.');\n            }\n            const data: DashboardData = await response.json();\n            setDashboardData(data);\n        } catch (err) {\n            const errorMessage = err instanceof Error ? err.message : \"An unknown error occurred.\";\n            setError(errorMessage);\n            toast({ title: \"Error\", description: \"Could not load dashboard data.\", variant: \"destructive\" });\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    fetchDashboardData();\n  }, [toast]);\n\n  const toggleTaskCompletion = (taskId: string) => {\n    if (!dashboardData) return;\n    const updatedTasks = dashboardData.tasks.map(task => \n      task.id === taskId ? { ...task, completed: !task.completed } : task\n    );\n    setDashboardData({ ...dashboardData, tasks: updatedTasks });\n  };\n\n\n  const widgets: DashboardWidget[] = [\n     {\n      id: 'patientAlerts',\n      title: 'Key Patient Alerts',\n      icon: Bell,\n      defaultPosition: 0,\n      isFrequentlyUsed: true,\n      colSpan: 'lg:col-span-2',\n      content: (\n         <ScrollArea className=\"h-40\">\n          <ul className=\"space-y-2\">\n            {dashboardData?.tasks.filter(t => t.category === 'Patient Alert' && !t.completed).map(task => (\n              <li key={task.id} className=\"flex items-center justify-between p-2 bg-destructive/10 border border-destructive/30 rounded-md text-sm\">\n                <span className=\"font-medium text-destructive\">{task.text}</span>\n                 <Button variant=\"ghost\" size=\"sm\" className=\"text-xs text-destructive\" onClick={() => toggleTaskCompletion(task.id)}>\n                  Acknowledge\n                </Button>\n              </li>\n            ))}\n            {dashboardData && dashboardData.tasks.filter(t => t.category === 'Patient Alert' && !t.completed).length === 0 && <p className=\"text-center text-muted-foreground py-4\">No active alerts.</p>}\n          </ul>\n        </ScrollArea>\n      )\n    },\n    {\n      id: 'pendingTasks',\n      title: 'Pending Tasks',\n      icon: CheckSquare,\n      defaultPosition: 1,\n      isFrequentlyUsed: true, \n      colSpan: 'lg:col-span-1',\n      content: (\n        <ScrollArea className=\"h-60\">\n          <ul className=\"space-y-2\">\n            {dashboardData?.tasks.filter(t => !t.completed).map(task => (\n              <li key={task.id} className=\"flex items-center justify-between p-2 bg-muted/50 rounded-md text-sm hover:bg-muted/70 transition-colors\">\n                <div>\n                  <span className={cn(\"font-medium\", task.priority === \"High\" && \"text-destructive\")}>{task.text}</span>\n                  <div className=\"text-xs text-muted-foreground\">\n                    <span>{task.category}</span>\n                    {task.dueDate && <span> • Due: {task.dueDate}</span>}\n                  </div>\n                </div>\n                <Button variant=\"ghost\" size=\"sm\" className=\"text-xs\" onClick={() => toggleTaskCompletion(task.id)}>\n                    <CheckSquare className=\"h-4 w-4\"/>\n                </Button>\n              </li>\n            ))}\n            {dashboardData && dashboardData.tasks.filter(t => !t.completed).length === 0 && <p className=\"text-center text-muted-foreground py-4\">No pending tasks!</p>}\n          </ul>\n        </ScrollArea>\n      )\n    },\n    {\n      id: 'messages',\n      title: 'Messages & Communications',\n      icon: MessageCircle,\n      defaultPosition: 2,\n      colSpan: 'lg:col-span-1',\n      content: <p className=\"text-muted-foreground text-sm p-4 text-center\">Secure messaging interface placeholder. (e.g., unread messages count, quick reply)</p>\n    },\n    {\n      id: 'scheduleOverview',\n      title: 'Schedule & On-Call',\n      icon: CalendarDays,\n      defaultPosition: 3,\n      colSpan: 'lg:col-span-1',\n      content: <p className=\"text-muted-foreground text-sm p-4 text-center\">Today's appointments and on-call responsibilities placeholder.</p>\n    }\n  ];\n  \n  const [widgetOrder] = useState<string[]>(widgets.sort((a,b) => a.defaultPosition - b.defaultPosition).map(w => w.id));\n\n  const renderContent = () => {\n    if (isLoading) {\n        return <div className=\"flex justify-center items-center h-64\"><Loader2 className=\"h-8 w-8 animate-spin text-primary\"/></div>;\n    }\n    if (error) {\n        return <div className=\"p-4\"><Card className=\"bg-destructive/10 border-destructive\"><CardContent className=\"p-4 text-center text-destructive-foreground\"><ServerCrash className=\"mx-auto h-8 w-8 mb-2\"/><p>Failed to load dashboard data.</p><p className=\"text-xs\">{error}</p></CardContent></Card></div>\n    }\n    if (!dashboardData) {\n        return <p className=\"text-center text-muted-foreground py-10\">No dashboard data available.</p>;\n    }\n    return (\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {widgetOrder.map(widgetId => {\n            const widget = widgets.find(w => w.id === widgetId);\n            if (!widget) return null;\n            return (\n                <motion.div\n                key={widget.id}\n                layout\n                whileHover={!isEditMode ? { y: -3, boxShadow: \"0px 8px 15px hsla(var(--primary) / 0.15)\" } : {}}\n                transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n                className={cn(\n                    \"bg-card rounded-xl shadow-md border-2 border-transparent\",\n                    widget.colSpan || 'lg:col-span-1',\n                    widget.isFrequentlyUsed && !isEditMode && \"tool-card-frequent firebase-gradient-border-hover animate-subtle-pulse-glow\",\n                    isEditMode && \"cursor-grab\"\n                )}\n                >\n                <Card className={cn(\"h-full border-none shadow-none\", widget.isFrequentlyUsed && !isEditMode && \"bg-transparent\")}>\n                    <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2 pt-4 px-4\">\n                    <div className=\"flex items-center gap-2\">\n                        <widget.icon className={cn(\"h-5 w-5\", widget.isFrequentlyUsed ? \"text-primary\" : \"text-muted-foreground\")} />\n                        <CardTitle className=\"text-md font-medium\">{widget.title}</CardTitle>\n                    </div>\n                    {isEditMode && <GripVertical className=\"h-5 w-5 text-muted-foreground cursor-grab\" title=\"Drag to reorder (conceptual)\" />}\n                    </CardHeader>\n                    <CardContent className=\"p-4 pt-0\">\n                    {widget.content}\n                    </CardContent>\n                </Card>\n                </motion.div>\n            );\n            })}\n        </div>\n    )\n  }\n\n  return (\n    <div className=\"p-1 fade-in\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-2xl font-semibold text-foreground\">My Clinical Dashboard</h2>\n        <Button variant=\"outline\" onClick={() => setIsEditMode(!isEditMode)} size=\"sm\" className=\"rounded-lg group\">\n          {isEditMode ? <CheckSquare className=\"mr-2 h-4 w-4\"/> : <Settings className=\"mr-2 h-4 w-4 transition-transform duration-300 group-hover:rotate-45\"/>}\n          {isEditMode ? \"Save Layout\" : \"Customize\"}\n        </Button>\n      </div>\n      {renderContent()}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1304, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/s/frontend/src/app/page.tsx"],"sourcesContent":["// src/app/page.tsx\n\"use client\";\n\nimport { useState } from 'react';\nimport { HeroSection } from '@/components/homepage/hero-section'; \nimport { ModeSwitcher, type ActiveMode } from '@/components/homepage/mode-switcher';\nimport { SymptomAnalysisMode } from '@/components/homepage/symptom-analysis-mode';\nimport { ImageProcessingMode } from '@/components/homepage/image-processing-mode';\nimport { EducationalSupportMode } from '@/components/homepage/educational-support-mode';\nimport { PersonalizedClinicalDashboard } from '@/components/pro/personalized-clinical-dashboard';\nimport { AppLayout } from '@/components/layout/app-layout';\n\nexport default function HomePage() {\n  const [activeMode, setActiveMode] = useState<ActiveMode>('symptom'); \n\n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      <HeroSection />\n      <main className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-8 sm:py-12 flex-grow\">\n        <ModeSwitcher activeMode={activeMode} setActiveMode={setActiveMode} />\n        <div className=\"mt-8 md:mt-12 content-area\">\n          <div className={activeMode === 'symptom' ? 'active-mode' : 'inactive-mode'}>\n            {activeMode === 'symptom' && <SymptomAnalysisMode />}\n          </div>\n          <div className={activeMode === 'image' ? 'active-mode' : 'inactive-mode'}>\n           {activeMode === 'image' && <ImageProcessingMode />}\n          </div>\n          <div className={activeMode === 'education' ? 'active-mode' : 'inactive-mode'}>\n          {activeMode === 'education' && <EducationalSupportMode />}\n          </div>\n          <div className={activeMode === 'dashboard' ? 'active-mode' : 'inactive-mode'}>\n           {activeMode === 'dashboard' && <PersonalizedClinicalDashboard />}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"AAAA,mBAAmB;;;;;AAGnB;;;;;;;;;;;AAGA;;;;;;AAEA;AACA;AARA;;;;;;;;;AAWe,SAAS;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,4WAAA,CAAA,WAAQ,AAAD,EAAc;IAEzD,qBACE,qZAAC;QAAI,WAAU;;0BACb,qZAAC;;;;;0BACD,qZAAC;gBAAK,WAAU;;kCACd,qZAAC;wBAAa,YAAY;wBAAY,eAAe;;;;;;kCACrD,qZAAC;wBAAI,WAAU;;0CACb,qZAAC;gCAAI,WAAW,eAAe,YAAY,gBAAgB;0CACxD,eAAe,2BAAa,qZAAC,yKAAA,CAAA,sBAAmB;;;;;;;;;;0CAEnD,qZAAC;gCAAI,WAAW,eAAe,UAAU,gBAAgB;0CACvD,eAAe,yBAAW,qZAAC;;;;;;;;;;0CAE7B,qZAAC;gCAAI,WAAW,eAAe,cAAc,gBAAgB;0CAC5D,eAAe,6BAAe,qZAAC,4KAAA,CAAA,yBAAsB;;;;;;;;;;0CAEtD,qZAAC;gCAAI,WAAW,eAAe,cAAc,gBAAgB;0CAC3D,eAAe,6BAAe,qZAAC,8KAAA,CAAA,gCAA6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMxE","debugId":null}}]
}